@tailwind base;
@tailwind components;
@tailwind utilities;

:root {

}
*{
    /* border:1px solid gray; */
}
html,body{
    scroll-behavior: smooth;
}

.link-underline {
    border-bottom-width: 0;
    background-image: linear-gradient(transparent, transparent), linear-gradient(#fff, #fff);
    background-size: 0 3px;
    background-position: 0 100%;
    border-radius: 2px;
    background-repeat: no-repeat;
    transition: background-size .3s ease-in-out;
}

.link-underline-black {
    background-image: linear-gradient(transparent, transparent), linear-gradient(#64ffda, #64ffda)
}

.link-underline:hover {
    background-size: 100% 3px;
    background-position: 0 100%
}
img,
svg,
.gatsby-image-wrapper {
    width: 100%;
    max-width: 100%;
    vertical-align: middle;
}

img[alt=""],
img:not([alt]) {
    filter: blur(5px);
}

svg {
    width: 100%;
    height: 100%;
    fill: currentColor;
    vertical-align: middle;
}
svg .feather {
    fill: none;
}
.hero {
    background-image: radial-gradient(
        circle farthest-side at var(--x, 100px) var(--y, 100px),
        #64ffdb3d 0%,
        transparent 60%
    );
}

.title {
    font-size: 20px;
    text-transform: uppercase;
    transform: rotate(10deg) translateX(calc(var(--x) / 10, 0px));
}
path#logo-hexagon{
    --strokeLength : 270.10827; 
    --strokeCalc : 0 ; 
    animation: hexagon 1s linear forwards;
    stroke-dasharray:var(--strokeLength) ;/*270*/
    stroke-dashoffset: var(--strokeLength);
    width:0;
}
path#logo-y {
    opacity:0;
    animation : logo_y 1s linear forwards;
    animation-delay: 2s;
    transform-origin: center;
    box-shadow: 0 10px 30px -10px rgba(2,12,27,0.7);;
}
@keyframes hexagon {
    0% {
        stroke-dashoffset: var(--strokeLength);
    }
    100% {
        stroke-dashoffset: var(--strokeCalc);
    }
}
@keyframes logo_y {
    0% {
        opacity: 0;
    }

    100% {
        opacity: 1;
    }
}
.disppear-loader{
    animation:disppear_loader 1s forwards ;
    
}
@keyframes disppear_loader {
    0% {
        opacity: 1;
    }
    99%{
        opacity: 1;
    }
    100% {
        opacity: 0;
    }
}

@layer base {
    :root {
      --color-primary: #dcff50;
      --color-secondary: #7b61ff;
      --color-heading: #f5f5f7;
      --color-text: rgba(255, 255, 255, 0.6);
      --color-background: #090909;
  

    }
  }
  
  
  @layer utilities {
    /* This two helpers apply a -50% to the translate x/y, and add
     * a --y/--x css variable to it. This util is only here to make writing this class
     * a bit easier to read in the HTML :)   */
    .translate-y-centered-offset {
      @apply translate-y-[calc(-50%_+_var(--y))];
    }
    .translate-x-centered-offset {
      @apply translate-x-[calc(-50%_+_var(--x))];
    }
  }